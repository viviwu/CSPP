//
//  CSPrefixHeader.pch
//  CSFinance
//
//  Created by vivi wu on 2018/2/8.
//  Copyright © 2018年 vivi wu. All rights reserved.
//

#ifndef CSPrefixHeader_pch
#define CSPrefixHeader_pch

// Include any system framework and library headers here that should be included in all compilation units.
// You will also need to set the Prefix Header build setting of one or more of your targets to reference this file.
//屏幕尺寸
#define kScreenW [UIScreen mainScreen].bounds.size.width
#define kScreenH [UIScreen mainScreen].bounds.size.height
#define kScreenB [UIScreen mainScreen].bounds

#define kSelfBounds self.view.bounds
#define kSelfVB_H self.view.bounds.size.height
#define kSelfVB_W self.view.bounds.size.width

#define kSelfH self.bounds.size.height
#define kSelfW self.bounds.size.width

#define kContentH self.contentView.bounds.size.height
#define kContentW self.contentView.bounds.size.width

#define kAppDel ((AppDelegate *)[UIApplication sharedApplication].delegate)

#define kDevice_Is_iPhoneX ([UIScreen instancesRespondToSelector:@selector(currentMode)] ? CGSizeEqualToSize(CGSizeMake(1125, 2436), [[UIScreen mainScreen] currentMode].size) : NO)

//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

#define KSYScreen_Frame(x,y,w,h) CGRectMake(x,y,w,h)
//屏幕中心
#define KSYView_Center(view) ((view).center)
#define KSYView_Center_X(view) ((view).center.x)
#define KSYView_Center_Y(view) ((view).center.y)
//控件宽高
#define KSYViewFrame_Size_Width(view) ((view).frame.size.width)
#define KSYViewFrame_Size_Height(view) ((view).frame.size.height)
//控件原始坐标
#define KSYViewFrame_Origin_X(view) ((view).frame.origin.x)
#define KSYViewFramen_Origin_Y(view) ((view).frame.origin.y)


//颜色
#define KSYRGB(r, g, b) [UIColor colorWithRed:((r) / 255.0) green:((g) / 255.0) blue:((b) /255.0) alpha:1.0]
#define KSYRGBAlpha(r, g, b, a) [UIColor colorWithRed:((r) / 255.0) green:((g) / 255.0) blue:((b) / 255.0) alpha:(a)]

#define kRGBColor(cr,cg,cb) [UIColor colorWithRed:cr  green:cg  blue:cb  alpha:1]
#define CS_RANDOM_COLOR  KSYRGB(arc4random_uniform(256),arc4random_uniform(256),arc4random_uniform(256))

#define UIColorFromRGB(rgbValue) \
[UIColor colorWithRed:((float)((rgbValue & 0xFF0000) >> 16))/255.0 \
green:((float)((rgbValue & 0x00FF00) >>  8))/255.0 \
blue:((float)((rgbValue & 0x0000FF) >>  0))/255.0 \
alpha:1.0]


//字体大小
#define KSYUIFont(font) [UIFont systemFontOfSize:font]

#define SafeAreaBottomHeight (kScreenH == 812.0 ? 34 : 0)
#define SafeAreaStatusBarTopHeight (kScreenH == 812.0 ? 44 : 20)
#define SafeAreaTopHeight (kScreenH == 812.0 ? 88 : 64)

#define closeSuspensionBox @"closeSuspension"

//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

#ifdef __OBJC__
    #import <UIKit/UIKit.h>
    #import <Foundation/Foundation.h>
    #import <QuartzCore/QuartzCore.h>

//define this constant if you want to use Masonry without the 'mas_' prefix
#define MAS_SHORTHAND

//define this constant if you want to enable auto-boxing for default syntax
#define MAS_SHORTHAND_GLOBALS

    //适配库
    #import <Masonry/Masonry.h>
    #import <MJExtension.h>

    #import "KSYGetDeviceName.h"
    #import "UIBarButtonItem+Item.h"

    #import "CSViewController.h"
    #import "CSTableViewController.h"
    #import "UIViewController+CS.h"
    #import "UIView+CS.h"
    #import "NSDictionary+Log.h"
    #import "NSArray+Log.h"
    #import "NSDictionary+CS.h"

    #import "CSCentralManager.h"
/*
    #import "UIView+SLExtension.h"
    #import "UIViewController+SLHUD.h"
    #import "UIViewController+SLExtension.h"
    #import "NSObject+LSHUD.h"
    #import "LSNetworkTool.h"
*/

#import "XWBaseController.h"

#endif


//有返回值的宏
#define isToNull(value) \
({\
id tmp;\
if (![value isKindOfClass:[NSNull class]])\
tmp = value;\
else \
tmp = nil;\
(tmp);\
})\

static inline UIEdgeInsets csSafeAreaInset(UIView *view) {
    if (@available(iOS 11.0, *)) {
        return view.safeAreaInsets;
    }
    return UIEdgeInsetsZero;
}


/*
 * if DEBUG is not defined, or if it is 0 then
 * all DLOGXXX macros will be disabled
 *
 * if DEBUG==1 then:
 * DLOG() will be enabled
 * DLOGERROR() will be enabled
 * DLOGINFO()will be disabled
 *
 * if DEBUG==2 or higher then:
 * DLOG() will be enabled
 * DLOGERROR() will be enabled
 * DLOGINFO()will be enabled
 */
#if !defined(DEBUG) || DEBUG == 0
#define DLOG(format, ...) do {} while (0)
#define DLOGINFO(format, ...) do {} while (0)
#define DLOGERROR(format, ...) do {} while (0)

#elif DEBUG == 1
#define DLOG(format, ...) NSLog((@"%s [Line %d] " format), __PRETTY_FUNCTION__, __LINE__, ##__VA_ARGS__)
#define DLOGERROR(format, ...) NSLog((@"%s [Line %d] " format), __PRETTY_FUNCTION__, __LINE__, ##__VA_ARGS__)
#define DLOGINFO(format, ...) do {} while (0)

#elif DEBUG > 1
#define DLOG(format, ...) NSLog((@"%s [Line %d] " format), __PRETTY_FUNCTION__, __LINE__, ##__VA_ARGS__)
#define DLOGERROR(format, ...) NSLog((@"%s [Line %d] " format), __PRETTY_FUNCTION__, __LINE__, ##__VA_ARGS__)
#define DLOGINFO(format, ...) NSLog((@"%s [Line %d] " format), __PRETTY_FUNCTION__, __LINE__, ##__VA_ARGS__)
#endif

#endif /* CSPrefixHeader_pch */
